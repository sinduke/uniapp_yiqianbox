<template>
	<view class="container">
		<!-- 引导页 -->
		<view class="guidePage" :style="{width: myWidth+'px',height:myHeight+'rpx'}">
			<!-- 引导页视频 -->
		<!-- 	<view class="video" v-if="videoshow&&videoData.isshow">
				<video :src="videosrc" autoplay :muted="false" object-fit='fill' style="width: 100%;" class="video-play" :controls='false'></video>
			</view> -->
			<view class="content"  :style="{width: myWidth+'px',height:myHeight+'rpx'}" v-if="guideFirstya==1">
				<swiper class="swiper" :style="{width: myWidth+'px',height:myHeight+'rpx'}" @change="changeSwiper" indicator-dots indicator-active-color="#ff8500">
					<swiper-item class="swiper-item" :style="{width: myWidth+'px',height:myHeight+'rpx'}" v-for="(item,index) in images " :key="index">
						<image :src="item"  :style="{width: myWidth+'px',height:myHeight+'rpx'}"></image>
					</swiper-item>
				</swiper>
			</view>
			<view class="content"  :style="{width: myWidth+'px',height:myHeight+'rpx'}" v-else>
				<image :src="pageData.image" :style="{width: myWidth+'px',height:myHeight+'rpx'}" v-if="pageData"></image>
			</view>
			<view class="timer" @click="handleClick" v-if="timerShow && timer<=3">
			<text class="text">{{timer}}s </text> 
			<text class="text" style="margin-left: 15rpx;">关闭</text>
			</view>
		</view>
	</view>
</template>

<script>
	import { $api } from '@/config/api.js';
	import common from "@/common/js/common.js";
	export default {
		data() {
			return {
				time: "",
				// 引导页
				guideShow: true,
				images: [
					"../../static/images/index/guide1.png",
					"../../static/images/index/guide2.png",
					"../../static/images/index/guide3.png",
				],
				pageData: null,
				timer: 3,
				timerShow: false,
				videoshow: true,
				videosrc: '',
				videoData: false

			};
		},
		computed:{
			guideFirstya(){
				return uni.getStorageSync('guideFirstya')||1
			},
			myHeight() {
				return uni.getSystemInfoSync().screenHeight * (750 / uni.getSystemInfoSync().windowWidth)
			},
			myWidth() {
				return uni.getSystemInfoSync().windowWidth
			},
			statusBarHeight() {
				return uni.getSystemInfoSync().statusBarHeight
			},
		},
		methods: {
			// 引导页
			getPageData() {
				$api.get("home/slideguid").then((res) => {
					if (res.data.data) {	
						this.pageData = res.data.data.hometopper;
						console.log(this.pageData,'resresres')
						if (this.guideFirstya != 1) {
							this.countDown();
						}
					} else {
						this.homeShow = true;
						this.guideShow = false;
						this.handleClick();
					}
				});
			},
			countDown() {
				let settime;
				if (this.videoData.isshow) {
					settime = setTimeout(() => {
						this.videoshow = false
						this.timerShow = true;
						this.time = setInterval(() => {
							this.timer--;
							this.homeShow = true;
							if (this.timer < 1) {
								clearInterval(this.time);
								this.handleClick();
							}
						}, 1000);
					}, 7000)

				} else {
					clearInterval(settime)
					this.videoshow = false
					this.timerShow = true;
					this.time = setInterval(() => {
						this.timer--;
						this.homeShow = true;
						if (this.timer==0) {
							clearInterval(this.time);
							this.handleClick();
						}
					}, 1000);


				}



			},
			/* 路由跳转 */
			// routerTo() {
			// 	clearInterval(this.time);
			// 	uni.navigateTo({
			// 		url: "/pages/views/gameDetail/index?game_id=" + this.pageData.target_id + "&guidePage=1",
			// 	});
			// },
			changeSwiper(e) {
				if (e.detail.current == 2) {
					uni.setStorageSync("guideFirstya", 2);
					this.countDown();
				}
			},
			//点击事件
			handleClick() {
				uni.preloadPage({
					url: "/pages/index/index",
					complete: () => {
						clearInterval(this.time);
						uni.switchTab({
							url: "/pages/index/index",
						})
					}
				})
			}
		},
		mounted() {
			this.getPageData()
		},
	};
</script>

<style scoped>
	.container {
		flex: 1;
		overflow: hidden;
		position: relative;
		background-color: #fff;
		}
		/* .video {
			background-color: #fff;
			position: fixed;
			width: 100%;
			height: 100%;
			left: 0;
			right: 0;
			top: 0;
			bottom: 0;
			z-index: 101;
               }
			.video-play {
				position: absolute;
				top: 30%;
				left: 0;

			} */
			.timer {
				position: fixed;
				bottom: 120rpx;
				right: 40rpx;
				background-color: rgba(60,60,60, 0.4);
				padding: 15rpx 20rpx;
				border-radius: 50rpx;
				flex-direction: row;
				align-items: center;
			
			}
			.text{
				color: #fff;
				font-size: 28rpx;
				lines: 1;
				font-weight: 400;
			}
	
</style>
