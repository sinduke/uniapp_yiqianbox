<!-- 新服 -->
<template>
	<view class="serverList">
		<view class="titleTime" style="margin-top: 24rpx;">
			<text :class="['timer',heiye?'isTheme':'noTheme']"  >{{mytimes}}</text>
			<view v-if="heiye==false" class="titleLine" ref="titleLine" :style="{width:myWidth+'px',height:'3rpx',marginTop:'16rpx'}">
			</view>
			
		</view>
		<view class="myList" :style="{height:myHeight-320+'rpx',width:myWidth+'px'}">
			<list class="list" :style="{height:myHeight-320+'rpx'}" loadmoreoffset='10' :show-scrollbar='false' ref="list" @loadmore='loadmore'>
				<refresh @refresh="onrefresh" :display=" refreshing ? 'show' : 'hide'" :viewHeight='120'>
					<view class="refreshImages" :style="{width:myWidth-32+'px'}">
						<image src="@/static/images/myrefresh.gif" mode="widthFix" class="refreshImage"></image>
					</view>
				</refresh>
				<cell v-for="(myList,myindex) in pageData" :kye='myindex'>
					<view :style="{width:$store.state.myWidth+'px'}" v-if="typeof myList[0].game_start_time=='number'" class="cardLines" @disappear='handleDiss($event,getmonth(myList[0].game_start_time),weekday[new Date(myList[0].game_start_time*1000).getDay()])' >
						<text :class="['timers',heiye?'isTheme':'noTheme']"   v-if="getmonth(myList[0].game_start_time)!=getmonth(new Date()/1000)">{{myList[0].game_start_time | dateFormat('MM-dd')}} {{weekday[new Date(myList[0].game_start_time*1000).getDay()]}}</text>
						<view class="lins" v-if="getmonth(myList[0].game_start_time)!=getmonth(new Date()/1000)"></view>
						<view class="lins" v-else :style="{backgroundColor:heiye?'':'#fff'}" ></view>
					</view>
					<view :style="{width:$store.state.myWidth+'px'}" v-else class="cardLines" @disappear='handleDiss($event,getmonth(myList[0].game_start_time[0]),weekday[new Date(myList[0].game_start_time[0]*1000).getDay()])'>
						<text :class="['timers',heiye?'isTheme':'noTheme']" class="timers" v-if="getmonth(myList[0].game_start_time[0])!=getmonth(new Date()/1000)">{{myList[0].game_start_time[0] | dateFormat('MM-dd')}} {{weekday[new Date(myList[0].game_start_time[0]*1000).getDay()]}}</text>
						<view class="lins" v-if="getmonth(myList[0].game_start_time[0])!=getmonth(new Date()/1000)"></view>
						<view class="lins" v-else :style="{backgroundColor:heiye?'':'#fff'}"></view>
					</view>

					<view v-for="(item,index) in myList" :kye='index' v-if="index<14">
						<view class="card" :style="{width:myWidth-32+'px',marginBottom:'56rpx'}">
							<view v-if="heiye==false" class="cardServer">
								<text v-if="typeof item.ser_name=='string'" class="server_name text1" style="color: #FF5927;">{{item.ser_name}}</text>
								<text v-else class="server_name text1" style="color: #FF5927;">{{item.ser_name[0]}}</text>
								
								<view v-if="typeof item.game_start_time=='object'" style="flex-direction: row;">
									<text class="serverTimes text1" :class="{isServerTime:active1==v}"	:style="{backgroundColor:active==v?'#fff':v%2==0?'#F2F2F2':'#F8F8F8'}" v-for="(i,v) in item.game_start_time" v-if="v<5"	:key='v'>{{i|dateFormat('hh:mm')}}</text>
								</view>

								<text v-else style="background-color: #F2F2F2;" class="serverTimes text1">{{item.game_start_time|dateFormat('hh:mm')}}</text>
							</view>
							<view v-else class="cardServer">
								<text v-if="typeof item.ser_name=='string'" class="server_name1 text1" style="color: #FF5927;">{{item.ser_name}}</text>
								<text v-else class="server_name1 text1" style="color: #FF5927;">{{item.ser_name[0]}}</text>
								
								<view v-if="typeof item.game_start_time=='object'" style="flex-direction: row;">
									<text class="serverTimes text1" :class="{isServerTime1:active1==v}"	:style="{backgroundColor:active==v?'#666':v%2==0?'#535353':'#4A4A4A'}" v-for="(i,v) in item.game_start_time" v-if="v<5"	:key='v'>{{i|dateFormat('hh:mm')}}</text>
								</view>
							
								<text v-else style="background-color: #666" class="serverTimes text1">{{item.game_start_time|dateFormat('hh:mm')}}</text>
							</view>
							<view class="imageBack" style="margin-bottom: 16rpx">
								<image class="images" :src="item.hot_image" :style="{width:myWidth-32+'px'}" mode="widthFix" @click="handleRouter(item.game_id)"></image>
							</view>
							<view class="gameDetail" @click="handleRouter(item.game_id)">
								<view class="detatilLeft">
									<text :class="['gamename',heiye?'isTheme':'noTheme']" style="margin-bottom:10rpx ;">{{item.gamename}}</text>
									<view class="listBottom">
										<text :style="{color:heiye?'#c1c1c1':'#666'}" class="type text" v-if="item.classify==5">H5</text>
										<text :style="{color:heiye?'#c1c1c1':'#666'}" class="type text" v-for="(v,i) in item.type" :key="i" v-if="i<2">{{v}}</text>
										<text :style="{color:heiye?'#c1c1c1':'#666'}" class="user_cnt text">| 已有{{item.popularity_cnt}}人在玩</text>
									</view>
								</view>
								<view class="detatilRight">
									<view class="rate_item" v-if="item.rate<1">
									<text class="rate_text">{{(item.rate*10).toFixed(1)}} </text><text class="rate_text" style="font-size: 20rpx;"> 折</text>
									</view>
									<text v-else-if="item.has_coupons" class="rates" style="color:#19BFFF;">优惠券</text>
								</view>
							</view>

						</view>
					</view>
					<view  v-if="typeof myList[0].game_start_time=='number'" class="" @disappear='dispall($event,getmonth(myList[0].game_start_time),myList[0].game_start_time)'></view>
					<view  v-else class="" @disappear='dispall($event,getmonth(myList[0].game_start_time),myList[0].game_start_time)'></view>
				</cell>
				<cell v-if="loadinging">
					<view class="" style="margin-bottom: 120rpx;flex-direction: row;justify-content: center;" :style="{width:myWidth-32+'px'}">
						<image src="@/static/images/loadmore.gif" mode="widthFix" style="width: 120rpx;height: 120rpx;"></image>
					</view>
				</cell>
			</list>
		</view>
			<view v-if="Object.keys(pageData).length==0&&islogin" :style="{width:myWidth+'px'}" style="position: absolute;top: 300rpx;">
				<myloading :isrefre='isrefre' :isNoData='isNoData' @Refresh='Refresh'></myloading>
			</view>
	</view>
</template>

<script>
	import {
		$api
	} from '@/config/api.js';
	const BindingX = uni.requireNativePlugin('bindingx');
	import common from "@/common/js/common.js";
	import myloading from '@/components/nvue-loading/nvue-loading'
	export default {
		components: {
			myloading
		},
		props: {
			myHeight: {
				type: Number
			},
			myWidth: {
				type: Number
			},
			isServer: {
				type: Boolean,
				default: false,
			}
		},
		data() {
			return {
				page:1,
				loadinging:false,
				pageData: {},
				isNoData:false,
				count: 99,
				weekday: ["周日", "周一", "周二", "周三", "周四", "周五", "周六"],
				active: 0,
				active1: 0,
				list: [],
				mytimes: '',
				isrefre: false,
				refreshing: false,
				islogin: false,
				timeList:[],
			}
		},
		
		computed: {
			heiye(){
				return uni.getStorageSync('heiye').type
			},
			newTime() {
				return (new Date().getDay())
			},
			getmonth() {
			return function(date){
				return (((new Date(date*1000).getMonth() + 1)<10?'0' :'') + (new Date(date*1000).getMonth() + 1) + '月' + (new Date(date*1000).getDate()<10?'0':'') + new Date(date*1000).getDate())+'日'
					
				}
				 
			}
		},
		methods: {
			//刷新
			Refresh(data) {
				this.isrefre = true
				if (data) {
					this.getpageData()
				}
				setTimeout(() => {
					this.isrefre = false
				}, 4000)
			},
			//加载
			loadmore(){
			  if(this.count>Object.keys(this.pageData).length){
			   this.loadinging = true
			     this.page++
			      this.getpageData()
			  	}
			},
			onrefresh() {
				this.refreshing = true
				this.getpageData()
				setTimeout(() => {
					this.resetLoadMore()
					this.refreshing = false;
				}, 1000)
			},
			// 重置 loadmore
			resetLoadMore() {
				// this.loadinging = false
			},
			//获取开服数据
			getpageData() {
				$api.get('/gameserver/newlist', {
					page: this.page,
					client_id:this.$store.state.client_id
				}).then(res => {
					if(Object.keys(this.pageData).length){
					this.pageData = Object.assign(this.pageData, res.data.data.list)
						
					}else{
						this.pageData = res.data.data.list
					}
						for (let keys in this.pageData) {
							if(Object.keys(this.pageData).length){
								this.timeList.push(keys)
							}
							
						}
					this.loadinging = false
					this.isNoData = true

				})
			},
			//动画
			bind() {
				let anchor = common.getEl(this.$refs.list);
				let titleLine = common.getEl(this.$refs.titleLine);
				let res = BindingX.bind({
					anchor: anchor,
					eventType: 'scroll',
					props: [{
						element: titleLine,
						property: 'background-color', //动画属性
						expression: 'evaluateColor("#f1f1f1","#cccccc", min(y, 200)/200)' //表达式 说明了y从0-400,对应的值是1-0  
					}]
				})
			},
			handleTimer(i, v) {
				this.active1 = i
			},
			handleRouter(id) {
				uni.navigateTo({
					url: `/pages/view/gamedetail/gamedetail?gameid=${id}`
				})
			},

			//显示隐藏
			handleDiss(e, i, day) {
				
				if (e.direction == 'up') {
					if ( (((new Date().getMonth() + 1)<10 ? '0': '') + (new Date().getMonth() + 1) + '月' + (new Date().getDate()<10?'0':'')+ new Date().getDate()+'日') == i) {
						this.mytimes = '今日'+ ' '+this.weekday[this.newTime]
					} else {
						this.mytimes = i + ' ' + day
					}
				}
			},

			dispall(e,i,day){
			let	timeday1 = this.weekday[new Date(day*1000).getDay()]
			let timeday = this.weekday[new Date((day*1000)-86400000).getDay()]
			if (e.direction == 'down') {
				if ( ((new Date().getMonth() + 1)<10 ? '0': '') + (new Date().getMonth() + 1) + '月' +  (new Date().getDate()<10?'0':'') + new Date().getDate()+'日' == i) {
					this.mytimes = '今日'+ ' '+this.weekday[this.newTime]
			        
				} else {
					if(timeday1){
					let b = i.replace('月', "-")
					let c = b.replace('日', "")
					this.timeList.forEach((item,index)=>{
						if(item == c){
						let d = this.timeList[index-1].replace('-', "月")
						let e = d +"日"
						this.mytimes = e + ' ' + timeday 
							if(index==1){
								this.mytimes = '今日'+ ' '+ timeday
							}
						}
					})
					
					}else{
						this.mytimes = '今日'+ ' '+this.weekday[this.newTime]
					}
			 
				}
			
						
			}
				
			}
		
		},
		watch: {
			isServer(val) {
				if (val) {
				    // this.mytimes = this.getmonth(new Date()/1000) + ' '+this.weekday[this.newTime]
					this.mytimes = '今日'+' '+this.weekday[this.newTime]
					this.getpageData()
					this.bind();
					this.islogin = true
				}
				

			}
		},
		filters: {
			// 1.日期格式过滤器
			dateFormat(value, fmt) {
				let getDate = new Date(value * 1000);
				let o = {
					"M+": getDate.getMonth() + 1,
					"d+": getDate.getDate(),
					"h+": getDate.getHours(),
					"m+": getDate.getMinutes(),
					"s+": getDate.getSeconds(),
					"q+": Math.floor((getDate.getMonth() + 3) / 3),
					S: getDate.getMilliseconds(),
				};
				if (/(y+)/.test(fmt)) {
					fmt = fmt.replace(
						RegExp.$1,
						(getDate.getFullYear() + "").substr(4 - RegExp.$1.length)
					);
				}
				for (let k in o) {
					if (new RegExp("(" + k + ")").test(fmt)) {
						fmt = fmt.replace(
							RegExp.$1,
							RegExp.$1.length === 1 ?
							o[k] :
							("00" + o[k]).substr(("" + o[k]).length)
						);
					}
				}
				return fmt;
			}
		}


	}
</script>

<style scoped>
	@import '@/common/css/nvue-black.css';
	
	.rate_item {
		border: 2rpx solid #E4E4E4;
		flex-direction: row;
		align-items: flex-end;
		justify-content: center;
		border-radius:32rpx;
		padding: 8rpx 16rpx;
	
	}
	.rate_text{
		color: #FF5927;
		font-size: 28rpx;
		font-weight: 600;
	}


	.myList {
		padding: 0rpx 32rpx;
	}

	.loadmoreText {
		font-size: 22rpx;
		font-weight: 400;
		text-align: center;
		color: #666;
		margin: 10rpx 0;
	}

	.timer {
		padding: 0rpx 32rpx;
		font-size: 36rpx;
		font-weight: 600;
		

	}
	.timers {
		/* padding: 0rpx 32rpx; */
		margin-right: 24rpx;
		font-size: 36rpx;
		font-weight: 600;
		
	
	}

	.isServerTime {
		border: 1rpx solid #E4E4E4 !important;
		border-bottom: transparent;
		color: #1C1C1C !important;
	}
	.isServerTime1 {
		
		border-bottom: transparent;
		color: #c1c1c1 !important;
	}

	.cardLines {
		margin-bottom: 56rpx;
		flex-direction: row;
		align-items: center;
		justify-content: flex-start;

	}

	.images {
		border-bottom-left-radius: 20rpx;
		border-top-right-radius: 20rpx;
		border-bottom-right-radius: 20rpx;
	}

	.cardServer {
		flex-direction: row;
		align-items: center;
	}

	.server_name {
		padding: 6rpx 14rpx;
		border-top-left-radius: 20rpx;
		border: 1rpx solid #C1C1C1;
		border-bottom: transparent;
	}
	.server_name1 {
		padding: 6rpx 14rpx;
		border-top-left-radius: 20rpx;
		border: 1rpx solid #C1C1C1;
		border-bottom: transparent;
	}

	.serverTimes {
		padding: 6rpx 16rpx;
	}


	.text1 {
		color: #777;
		font-size: 24rpx;
	}

	.gameDetail {
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
	}

	.gamename {
		font-size: 32rpx;
		font-weight: 600;
		
	}

	.listBottom {
		flex-direction: row;
		align-items: center;
	}

	.type {
		margin-right: 12rpx;
	}

	.text {
		
		font-size: 26rpx;
	}

	.lins {
		flex: 1;
		height: 2rpx;
		background-color: #efefef;
	}

	.rates {
		font-size: 26rpx;
		font-weight: 600;
		color: #FF5927;
		padding: 8rpx 20rpx;
		border-radius: 32rpx;
		border: 2rpx solid #E4E4E4;
	}
</style>
