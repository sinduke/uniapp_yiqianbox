<template>
	<view class="container">
		 <myNavbar title='下载管理' :type="1" @click="handleDelete" right radius :src="isActive?'../../../static/images/my/xxxx.png':'../../../static/images/my/rwzx-xgnc.png'" ></myNavbar>
		 <view class="box" :style="{width:myWidth+'px'}">
			<list :style="{height:myHeight-160+'rpx'}" :show-scrollbar="false" >
				<cell style="height: 32rpx;"></cell>
				<cell v-for="(item,index) in pageDate" :key='item.game_id'>
					<view class="middle" :style="{width:myWidth-32+'px'}" >
						<view @click="handleDel(item,index)" class="mid_le" v-if="isActive" >
							<view class="le_box2" v-if="!item.noActive"></view>
							<image class="le_box1" v-else src="@/static/images/view/down_acitve.png"></image>
						</view>
						<view class="mid_ri" style="flex-direction: row;justify-content: space-between;">
							<image @click="handleDel(item,index)" :src="item.icon" class="ri_box1" style="width: 160rpx;height: 160rpx;"></image>
							<view  class="ri_box2" style="flex-direction: row;justify-content: space-between;align-items: center;flex: 1;">
								<view @click="handleDel(item,index)" style="width: 300rpx;margin-left: 24rpx;">
									<text style="color: #000000;font-weight: 400;font-size: 32rpx;lines: 1;text-overflow: ellipsis;" >{{item.gamename}}</text>
									<view style="flex-direction: row;width: 300rpx;">
										<text class="text6" style="margin-top: 10rpx;" v-for="(v,i) in item.type" :key="i" v-if="i<3">{{v}}</text>
									</view>
									<view style="flex-direction: row;margin-top: 10rpx;">
										<text v-if="item.myloading" style="font-size: 30rpx;font-weight: 400;color: #FF5927;width:120rpx;">{{item.myloading}}</text>
										<text v-if="item.myloading" class="text6">/ </text>
										<text class="text6" style="font-size: 30rpx;">{{item.myTotalData}}</text>
									</view>
								</view>
								<downLoad @getData='myGetData' :item='item' :sort='index' :getData='getData'></downLoad>
								
							</view>				
						</view>
					</view>
				</cell>
				
			</list>
			
			<!-- <nloading :style="{width:myWidth-32+'px'}" v-else :isNoData="isNoData"></nloading> -->
			<view class="bottom" :style="{width:myWidth-32+'px'}" v-if="isActive" >
				<view class="bot_box" @click="handleNotall"  v-if="selectAll">
					<image class="le_box1"  src="@/static/images/view/down_acitve.png" ></image>
					<text class="bottom_text">全不选</text>	
				</view>
				<view class="bot_box"  @click="handleAll"  v-else>
					<view class="le_box2"></view>
					<text class="bottom_text" >全选</text>	
				</view>
				
				<view class="bot_box1" @click="getDelDate">
					<text class="box1_text">已选择{{isNumber}}个游戏清除下载痕迹</text>
				</view>
			</view>
		</view>
		
	</view>
</template>

<script>
	import {
		$api
	} from '@/config/api.js';
	import common from "@/common/js/common.js";
	const globalData = getApp().globalData
	import myNavbar from '@/components/nvue-navbar/nvue-navbar'
	import nloading from '@/components/nvue-loading/nvue-loading'
	import downLoad from '@/components/xw-downLoadButton/xw-downLoadButton'
	export default {
		data() {
			return {
				isNoData:false,
				pageDate: [],
				selectAll: false,
				isActive: false,
				isNumber:0,
				getData: 0,
			}
		},
		components: {
			myNavbar,
			nloading,
			downLoad
		},
		watch:{
			myDownList:{
				handler(val){
					this.pageDate = val
					this.getData++
				},
				immediate:true
			}
		},
		
		onShow() {
			this.pageDate = uni.getStorageSync('downList')
			this.getData++
			console.log(666,this.pageDate)
			
		},
		methods: {
			handleStop() {
				this.isTrue = false
				this.downTasks.pause();
			
			},
			myGetData(list){
				this.pageDate = list[0]
				this.$store.commit('setDownTasksList', list[1])
				
			},
			toDetail(item) {
				uni.navigateTo({
					url: "/pages/view/gamedetail/gamedetail?gameid=" + item.game_id
				})
			},
			
			handleDelete() {
				
					uni.vibrateShort({
						success: () => {
							this.isActive = !this.isActive
							this.isNumber = this.pageDate.filter(item => {
								return item.noActive == true
							}).length
						}
					})
				
				
			},
			//确认删除
			getDelDate() {
				if (this.isNumber > 0) {
					uni.showModal({
						title: '删除任务',
						content: '清除当前选择的任务？',
						success: (res) => {
							if (res.confirm) {
								let arrList = []
								let downList = []
								let array = []
								downList = globalData.store.state.downTasksList
								arrList = this.pageDate.filter((item) => {
									return !item.noActive
								})
								
								this.pageDate = arrList
								if(arrList.length==0){
									this.isActive = false
									uni.setStorageSync('downList', [])
									this.$store.commit('setDownTasksList', [])
									return 
								}
								// console.log(this.pageList,'this.pageListthis.pageList')
								
								 downList.map(item => {
									arrList.map(v => {
										 if( item.game_id == v.game_id){
											 array.push(item)
										 }			
									})
									// console.log(array,'arrayarrayarrayarrayarray')
									return array
			
								})
								console.log(array,'listlistlist')
						
								this.$store.commit('setDownTasksList', array)
								uni.setStorageSync('downList', [])
								uni.setStorageSync('downList', arrList)
			
							}
							this.isActive = false
						}
					})
				}
			
			},
			//全选
			handleAll() {
				this.isNumber = 0
				this.pageDate.map(item => {
					item.noActive = true
					if (item.noActive) {
						this.isNumber++
					}
				})
				this.selectAll = true
				uni.setStorageSync('downList', [])
				uni.setStorageSync('downList', this.pageDate)
				
			},
			//全不选
			handleNotall(){
				this.isNumber = this.pageDate.length
				this.pageDate.map(item => {
					item.noActive = false
					if (!item.noActive) {
						this.isNumber--
					}
				})
				this.selectAll = false
				uni.setStorageSync('downList', [])
				uni.setStorageSync('downList', this.pageDate)	
			},
				
			//筛选
			handleDel(item,i) {
				if(this.isActive){
					this.pageDate[i].noActive = !this.pageDate[i].noActive
					this.isNumber = this.pageDate.filter(item => {
						return item.noActive == true
					}).length
					if (this.isNumber == this.pageDate.length) {
						this.selectAll = true
					} else {
						this.selectAll = false
					}
				}else{
					
					this.toDetail(item)
				}
			},
		},
		computed: {
			myDownList() {
				return uni.getStorageSync('downList')
			},
			myWidth() {
				return uni.getSystemInfoSync().windowWidth
			},
			myHeight() {
				return uni.getSystemInfoSync().windowHeight * (750 / uni.getSystemInfoSync().windowWidth)
			},
		},
	}
</script>

<style scoped>
	.container{
		flex: 1;
		background: #fff;
	}
	.box{
		position: relative;
		margin-top: 131rpx;
		padding: 32rpx 32rpx;
	}
	.head{
		background: #F4F4F4;
		padding: 40rpx 32rpx;
		flex-direction: row;
		border-radius: 40rpx;
		align-items: center;
		justify-content: space-between;
		margin-bottom: 40rpx;
	}
	.head_le{
		flex-direction: row;
		align-items: center;
	}
	.le_box{
		width: 64rpx;
		height: 64rpx;
		border-radius: 64rpx;
		background: #fff;
		flex-direction: column;
		justify-content: center;
		align-items: center;
		margin-right: 32rpx;
	}
	.le_img{
		width: 30rpx;
		height: 30rpx;
	}
	.ri_img{
		width: 20rpx;
		height: 30rpx;
	}
	.head_text1{
		font-size: 30rpx;
		font-weight: 400;
		color: #666666;
	}
	.middle{
		padding: 0rpx 0rpx 32rpx 0rpx;
		border-bottom: 1rpx solid #EFEFEF;
		flex-direction: row;
		align-items: center;
		margin-bottom: 40rpx;
	}
	.le_box2{
		width: 40rpx;
		height: 40rpx;
		border-radius: 40rpx;
		border: 2rpx solid #EFEFEF;
		margin-right: 32rpx;
	}
	.le_box1{
		width: 40rpx;
		height: 40rpx;
		border-radius: 40rpx;
		border: 2rpx solid #FF5927;
		margin-right: 32rpx;
	}
	.mid_ri{
		flex: 1;
	}
	.text5{
		padding: 8rpx 24rpx;
		
	}
	.text6{
		color: #666666;
		font-size: 28rpx;
		font-weight: 400;
		lines: 1;
		text-overflow: ellipsis;
		
	}
	.bottom{
		position: absolute;
		bottom:30rpx;
		padding: 20rpx 0rpx;
		flex-direction: row;
		justify-content: space-between;
		background: #fff;
	}
	.bottom_text{
		color: #666666;
		font-size: 30rpx;
		font-weight: 400;
	}
	.bot_box{
		flex-direction: row;
		align-items: center;
	}
	.bot_box1{
		padding: 18rpx 90rpx;
		border: 2rpx solid #E4E4E4;
		border-radius: 40rpx;
	}
	.box1_text{
		font-size: 26rpx;
		font-weight: 400;
		color: #FF5927;
	}
</style>

