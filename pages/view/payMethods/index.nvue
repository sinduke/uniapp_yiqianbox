<!-- 支付方式 -->
<template>
	<view class="container" :style="{width:myWidth+'px'}"> 
		<!-- <view class="myshadowLine" /> -->
		<view class="Title" :style="{width:myWidth+'px'}">
			<text class='text'>请选择你的支付方式</text>
		</view>
		
		<group :src="item.icon" v-for="(item,index) in payMethods" :title1="item.name" :key='index' :borderTop="index>0?false:true"  @click="handlePay(item.payway)"></group>
	</view>
</template>

<script>
	import group from '@/components/nvue-group/nvue-group.nvue';
	import { $api } from '@/config/api.js';
	import common from "@/common/js/common.js";

	export default {
		components:{
			group
		},
		onLoad(options) {
			this.goods_id = options.goods_id;
			this.order_id = options.order_id || "";
			this.order_token = options.order_token || "";
		},
		data() {
			return {
				goods_id: 0,
				order_id: "",
				order_token: "",
				isShow: false,

				payMethods: null,
				payway: "",
				order: {} // 下单之后的返回值
			}
		},
		computed: {
			myHeight() {
				return uni.getSystemInfoSync().windowHeight * (750 / uni.getSystemInfoSync().windowWidth)
			},
			myWidth() {
				return uni.getSystemInfoSync().windowWidth
			},
		},
		methods: {
			// 获取支付方式
			getPayMethods() {
				$api.get("account/pay/payway").then(res => {
					this.payMethods = res.data.data;
				})
			},
			// 点击支付
			handlePay(payway) {
				console.log(111111111)
				this.payway = payway;
				if (!this.order_id) {
					this.placeOrder();
				} else {
					this.initiatePay(this.order_id, this.order_token);
				}
			},
			// 第一步：下单
			placeOrder() {
				$api.get("account/goods/buy", {
					payway: this.payway,
					goods_id: this.goods_id

				}).then(res => {
					console.log(res, 'account')
					if (res.data.code == 200) {
						this.order = res.data.data;
						this.initiatePay(this.order.order_id, this.order.token);
					} else {
						uni.showToast({
							title: '下单失败'
						})
					}
				})
			},
			// 第二步：发起支付
			initiatePay(order_id, order_token) {
				$api.get("account/goods/pay?goods_id=81", {
					goods_id: this.goods_id,
					payway: this.payway,
					order_id: order_id,
					pay_token: order_token
				}).then(res => {
					console.log(res, 'goods_id')
					if ("alipayh5" == res.data.data.pay_type) {
						if (uni.getSystemInfoSync().platform == 'ios') {
							plus.runtime.openURL(res.data.data.token, function(res) {
								console.log(res);
							})
						} else {
							plus.runtime.openURL(res.data.data.btoken, function(res) {
								console.log(res);
							})
						}
					}
					if ("wxpayh5" == res.data.data.pay_type) {
						plus.runtime.openURL(res.data.data.btoken, function(res) {
							console.log(res);
						})
					}
					this.orderStatus();
					this.isShow = true
				})
			},
			// 监听订单状态
			orderStatus() {
				$api.get("/account/order/queryj", {
					order_id: this.order.order_id

				}).then(res => {

					console.log(res, 'queryj')
					if (res.data.data.status == 2) {
						uni.showToast({
							title: res.data.msg
						})
					} else {
						setTimeout(() => {
							this.orderStatus();
						}, 3000);
					}
				})
			}
		},
		created() {
			this.getPayMethods();
		},
		onShow() {
			var args = plus.runtime.arguments;
			if (this.isShow) {
				if (args) {
					uni.redirectTo({
						url: '/pages/transaction/index'
					})
				}
			}
		}

	}
</script>

<style scoped>
	.container {
		flex: 1;
		background-color: #fff;
		overflow: hidden;
	}

	.Title {
		flex-direction: row;
		align-items: center;
		justify-content: center;
		margin-bottom: 48rpx;
	}

	.text {
		color: #999999;
		padding: 0 32rpx;
		font-size: 32rpx;
	}

	.myshadowLine {
		width: 100%;
		height: 10rpx;
		box-shadow: 0px 0px 8rpx 0px rgba(210, 210, 210, 0.8);
		margin-bottom: 60rpx;

	}
</style>
