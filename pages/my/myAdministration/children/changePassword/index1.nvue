<template>
	<view class="box" :style="{height:myHeight-1+'rpx',width:myWidth+'px'}">
		<view class="input_box" :style="{width:myWidth-32+'px'}">
			<input v-model="form.oldpwd" class="input_style" type="text" placeholder="请输入原密码"   :password="isshow1"/>
			<image @click="isShow1" class="img_style" src="@/static/images/close.png" mode=""></image>
		</view>
		<view class="input_box" :style="{width:myWidth-32+'px'}">
			<input v-model="form.newpwd" class="input_style" type="text" placeholder="请输入新密码"  :password="isshow2"/>
			<image  @click="isShow2" class="img_style" src="@/static/images/close.png" mode=""></image>
		</view>
		<view class="input_box" :style="{width:myWidth-32+'px'}">
			<input v-model="form.newpwdAgain" class="input_style" type="text" placeholder="请再次输入新密码"  :password="isshow3"/>
			<image  @click="isShow3" class="img_style" src="@/static/images/close.png" mode=""></image>
		</view>
		<view class="button" :style="{width:myWidth+'px'}" >
			<text class="button_text" @click="getPageData">确认</text>
		</view>	
	</view>
</template>

<script>
	import {
		$api
	} from '@/config/api.js';
	export default {
		data() {
			return {
				value:'',
				isshow1:true,
				isshow2:true,
				isshow3:true,
				form: {
					oldpwd: "",
					newpwd: "",
					newpwdAgain: ""
				}
			}
		},
		computed:{
			myHeight(){
				return uni.getSystemInfoSync().windowHeight * (750 / uni.getSystemInfoSync().windowWidth)
			},
			myWidth(){
			 	return uni.getSystemInfoSync().windowWidth
			},
		},
		methods: {
			isShow1(){
				this.isshow1 = !this.isshow1
			},
			isShow2(){
				this.isshow2 = !this.isshow2
			},
			isShow3(){
				this.isshow3 = !this.isshow3
			},
			getPageData() {
				if(this.form.newpwd != this.form.newpwdAgain){
					uni.showToast({
						title:'两次密码不一致',
						icon:'none'
					})
					return ;
				}
				$api.get("user/passwd/update",{
			             ...this.form
				}).then(res => {
					if(res.data.code==200){
						uni.showToast({
							title:res.data.msg,
							icon:"none",
						})
						uni.navigateBack({
							delta:1
						})
					}else{
						uni.showToast({
							title:res.data.msg,
							icon:"none",	
						})
					}
					
				})
			}
		},
		
	}
</script>

<style scoped>
.box{
	background:#fff;
	padding:0rpx 32rpx ;
}
.input_box{
	padding:40rpx 32rpx;
	border-bottom:2rpx solid #ECECEC;
	flex-direction: row;
	justify-content: space-between;
}
.input_style{
	width:400rpx ;
	color: #999999;
	font-size:28rpx ;
	font-weight:400 ;
}
.img_style{
	width:30rpx ;
	height:30rpx ;
}
.button{
	flex-direction: row;
	justify-content: center;
}
.button_text{
	margin-top:48rpx ;
	font-size:32rpx ;
	border-radius:80rpx ;
	border:1rpx solid #E1E1E1;
	text-align: center;
	padding:24rpx 180rpx;
	color:#FF4810 ;
}
</style>
