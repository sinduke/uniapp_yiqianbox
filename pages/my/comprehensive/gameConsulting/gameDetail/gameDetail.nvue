<!-- 游戏资讯详情 -->
<template>
	<view class="container">
		<!-- 内容部分 -->
		<view class="box" v-if="detailList">
			<view class="box_head" @click="handleRouterdetail(detailList.game_id)">
				<view class="head_left">
					<image :src="detailList.icon" mode="widthFix" style="width: 140rpx;height: 140rpx"></image>
				</view>
				<view class="head_mid">
					<text class="head_mid1" :style="{width:myWidth-140+'px'}">{{detailList.title}}</text>
					<view style="flex-direction: row;align-items: center;">
						<text class="text">{{detailList.start_time | dateFormat('yyyy-MM-dd hh:mm')}}</text>
						<text class="text" style="margin: 0 20rpx;">|</text>
						<text class="text">{{post_hits}} 浏览</text>
					</view>
				</view>
			</view>
			<scroller :show-scrollbar='false'  :style="{height:myHeight-320+'rpx'}">
			<view class="box_middle">
				<text class="title">{{detailList.excerpt}}</text>
				<view class="" >
					<image :src="detailList.img"  style="height: 380rpx;border-radius: 20rpx;margin-bottom: 36rpx;" :style="{width:myWidth-32+'px'}"></image>
				</view>
				<text class="texts">{{content}}</text>
			</view>
			</scroller>
		</view>
		<!-- 分享 -->
		<propup :isshow='show' @close='show=false' :shareData='shareData' ref='propup' type='1'></propup>

	</view>
</template>

<script>
	import propup from '@/components/nvue-propup/nvue-propup.nvue';
	import {
		$api
	} from '@/config/api.js';
	import common from "@/common/js/common.js";
	export default {
		components: {
			propup
		},
		data() {
			return {
				show: false,
				detailList: null,
			    nodes:[],
				content:'',
				shareData: null,
				post_hits: 0
			}
		},
		computed: {
			myWidth() {
				return uni.getSystemInfoSync().windowWidth
			},
			myHeight() {
				return uni.getSystemInfoSync().windowHeight * (750 / uni.getSystemInfoSync().windowWidth)
			},
		},
		methods: {
			//跳转资讯详情页
			handleRouterdetail(id) {
				uni.navigateTo({
					url: `/pages/view/gamedetail/gamedetail?gameid=${id}`
				})
			},
			getPageData(params) {
				$api.get('/news/detail', {
					...params
				}).then(res => {
					if (res.statusCode == 200) {
						let cont =''
						this.detailList = res.data.data.data;
						   cont = this.detailList.content;
						   var reg = /<[^<>]+>/g 
						    this.content=cont.replace(reg,'')
							console.log(1)
                        
					
	
					}
				})
			},
			getData() {
				$api.get("share/detail", {
					share_type: 'game',
					game_id: this.detailList.game_id,
					client_id: this.$store.state.client_id

				}).then(res => {
					if (res.data.code == 200) {
						this.shareData = {
							...res.data.data
						}

					}
				})
			},
			//显示弹出层
			popClick() {
				this.getData()
				this.show = true
				this.$nextTick(() => {
					this.$refs.propup.bind()

				})
			},
		},
		onNavigationBarButtonTap(e) {
			this.popClick()

		},
		onLoad(option) {
			this.getPageData({
				news_id: option.news_id
			})
			this.post_hits = option.post_hits
		},
		filters: {
			// 1.日期格式过滤器
			dateFormat(value, fmt) {
				let getDate = new Date(value * 1000);
				let o = {
					"M+": getDate.getMonth() + 1,
					"d+": getDate.getDate(),
					"h+": getDate.getHours(),
					"m+": getDate.getMinutes(),
					"s+": getDate.getSeconds(),
					"q+": Math.floor((getDate.getMonth() + 3) / 3),
					S: getDate.getMilliseconds(),
				};
				if (/(y+)/.test(fmt)) {
					fmt = fmt.replace(
						RegExp.$1,
						(getDate.getFullYear() + "").substr(4 - RegExp.$1.length)
					);
				}
				for (let k in o) {
					if (new RegExp("(" + k + ")").test(fmt)) {
						fmt = fmt.replace(
							RegExp.$1,
							RegExp.$1.length === 1 ?
							o[k] :
							("00" + o[k]).substr(("" + o[k]).length)
						);
					}
				}
				return fmt;
			}
		},
	}
</script>

<style scoped>
	.container {
		background-color: #fff;
		flex: 1;
		
	}

	.box {
		margin-top: 40rpx;
		padding: 0 32rpx;
	}

	.box_head {
		flex-direction: row;
		align-items: center;
		justify-content: flex-start;
		padding-bottom: 32rpx;
		border-bottom: 1px solid #ECECEC;
	}

	.head_left {
		margin-right: 32rpx;
	}

	.head_mid1 {
		lines: 1;
		text-overflow: ellipsis;
		font-size: 32rpx;
		font-weight: 700;
		color: #252525;
		margin-bottom: 24rpx;

	}

	.title {
		font-size: 40rpx;
		font-weight: 700;
		color: #252525;
		margin: 36rpx 0
	}

	.text {
		font-size: 24rpx;
		color: #666666;
	}
	.texts{
		color: #666666;
		font-weight: 300;
		font-size: 32rpx;
		line-height: 42rpx;
		padding-bottom: 60rpx;
	}
	
</style>
