<template>
	<view class="container" :style="{width:$store.state.myWidth+'px'}">
		<view class="head" :style="{width:$store.state.myWidth+'px',height:active?downHeight*myHeight+'rpx':93+'rpx'}">
			<view @click="show" class="input_box" :style="{width:$store.state.myWidth-32+'px'}">
				<text class="input_text" v-if="iftitle">{{title}}</text>
				<text class="input_style" v-if="iftitle">{{rightTitle}}</text>
				<image class="isimg" :style="{transform:active?'rotate(0deg)':'rotate(90deg)'}" style="width:20rpx ;height:30rpx;transform: ;margin-right:10rpx;" src="@/static/images/view/left-gred.png" mode=""></image>	
			</view>
			<view class="input_box" :style="{width:$store.state.myWidth-32+'px'}">
				<text class="input_text" >{{text1}}</text>
				<text class="input_style" >{{rightText1}}</text>
				<!-- <image  class="img_style" src="@/static/images/close.png" mode=""></image> -->	
			</view>
			<view class="input_box" :style="{width:$store.state.myWidth-32+'px'}">
				<text class="input_text" >{{text2}}</text>
				<text class="input_style" >{{rightText2}}</text>
				<!-- <image  class="img_style" src="@/static/images/close.png" mode=""></image> -->
			</view>
			<slot></slot>
			
		</view>
	</view>
</template>

<script>
	export default {
		data() {
			return {
				active:false,
				isactive:false,
				
			}
		},
		props:{
			//是否显示标题
			iftitle:{
				default:true
			},
			// 过渡动画高度
			downHeight:{
				type: Number,
				default:0.37
			},
			//标题
			title:{
				type: String,
				default:'title'
			},
			//文本1
			text1:{
				type: String,
				default:'text1'
			},
			//文本2
			text2:{
				type: String,
				default:''
			},
			rightTitle:{
				type: String,
				default:''
			},
			rightText1:{
				type: String,
				default:''
			},
			rightText2:{
				type: String,
				default:''
			},
		},
		computed:{
			myHeight(){
				return uni.getSystemInfoSync().windowHeight * (750 / uni.getSystemInfoSync().windowWidth)
			},
		},
		methods: {
			show(){
				this.isactive = !this.isactive
				if(this.isactive){
					setTimeout(()=>{
						this.active = true
					},100)	
				}else{
					setTimeout(()=>{
						this.active = false
					},100)	
				}
				this.$emit('isactive',this.isactive)
			}
		}
	}
</script>

<style scoped>
.container{
	background-color:#fff ;
}
.head{
	flex-direction: column;
	align-items: center;
	transition-duration:0.5s;
	transition-property:height;
	overflow:hidden;
}
.isimg{
	transition-duration:0.5s;
	transition-property:transform;
}
.input_box{
	padding:36rpx 32rpx;
	border-bottom:2rpx solid #ECECEC;
	flex-direction: row;
	justify-content: space-between;
}
.input_text{
	color: #999999;
	font-size:32rpx ;
	font-weight: 400;
}
.input_style{
	
	color: #999999;
	font-size:32rpx ;
	font-weight: 400;
}
.img_style{
	width:36rpx ;
	height:36rpx ;
}

</style>